on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  flutter-analysis:
    name: Flutter Analysis & Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.5"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Run code generation (if needed)
        run: flutter packages pub run build_runner build --delete-conflicting-outputs || true

      - name: Run Flutter analyzer (warnings only, non-blocking)
        run: flutter analyze || true

      - name: Check Dart formatting (non-blocking)
        run: dart format --set-exit-if-changed . || true

      - name: Run unit and widget tests
        run: flutter test --coverage --reporter=github

      # Option 2: Coverage check simple pour Flutter
      - name: Enforce coverage threshold (80% minimum - Standard CDA)
        run: |
          # Installer lcov si pas disponible
          sudo apt-get update && sudo apt-get install -y lcov

          # Vérifier si le fichier existe
          if [ ! -f "coverage/lcov.info" ]; then
            echo "❌ No coverage file found"
            exit 1
          fi

          # Calculer le pourcentage de coverage
          TOTAL=$(lcov --summary coverage/lcov.info 2>/dev/null | grep lines | awk '{ print $2 }' | sed 's/%//' || echo "0")
          echo "📊 Coverage is $TOTAL%"

          if (( $(echo "$TOTAL < 80" | bc -l) )); then
            echo "❌ Coverage threshold not met (80% required)"
            exit 1
          fi
          echo "✅ Coverage threshold met ($TOTAL% >= 80%)"

      # Option 4: Coverage report natif GitHub Actions
      - name: Flutter Coverage Report Summary
        run: |
          echo "## 📊 Flutter Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          if [ -f "coverage/lcov.info" ]; then
            lcov --summary coverage/lcov.info >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Coverage summary not available" >> $GITHUB_STEP_SUMMARY
          else
            echo "No coverage data found" >> $GITHUB_STEP_SUMMARY
          fi
          echo '```' >> $GITHUB_STEP_SUMMARY
