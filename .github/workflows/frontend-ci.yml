on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  flutter-analysis:
    name: Flutter Analysis & Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.5"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Run code generation (if needed)
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Run Flutter analyzer (warnings only, non-blocking)
        run: flutter analyze || true

      - name: Check Dart formatting (non-blocking)
        run: dart format --set-exit-if-changed . || true

      - name: Run unit and widget tests
        run: flutter test --coverage --reporter=github

      - name: Install lcov tools for coverage
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov
          npm install -g lcov-summary

      - name: Enforce coverage threshold (80% minimum - Standard CDA)
        run: |
          TOTAL=$(lcov-summary coverage/lcov.info | grep lines | awk '{ print $2 }' | sed 's/%//')
          echo "📊 Coverage is $TOTAL%"
          if (( $(echo "$TOTAL < 80" | bc -l) )); then
            echo "❌ Coverage threshold not met (80% required)"
            exit 1
          fi
          echo "✅ Coverage threshold met ($TOTAL% >= 80%)"

      - name: Generate coverage report
        run: |
          genhtml coverage/lcov.info -o coverage/html
          echo "Coverage report generated in coverage/html"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: front
          name: front-coverage
          fail_ci_if_error: true
